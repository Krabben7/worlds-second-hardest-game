// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [], -Infinity);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [], -Infinity);
            case "level3":
            case "level3":return tiles.createTilemap(hex`180010000e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e01010101010101010101010101010e0e0e0e0e0e0e0e0e0e01030a0a0a0a0a0a0a0a0a0a04010e0e0e0e0e0e0e01010101090b0b0b0b0b0b0b0b0b0b08010101010e0e0e0e010c0d0c0b0b0b0b0b0b0b0b0b0b0b0b020202010e0e0e0e010d0c0d0b0b0b0b0b0b0b0b0b0b0b0b020202010e0e0e0e01010101090b0b0b0b0b0b0b0b0b0b08010101010e0e0e0e0e0e0e01060707070707070707070705010e0e0e0e0e0e0e0e0e0e01010101010101010101010101010e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e`, img`
........................
........................
........................
........................
.....22222222222222.....
.....2............2.....
..2222............2222..
..2..................2..
..2..................2..
..2222............2222..
.....2............2.....
.....22222222222222.....
........................
........................
........................
........................
`, [myTiles.transparency16,sprites.dungeon.floorLight0,sprites.dungeon.collectibleInsignia,sprites.castle.tilePath1,sprites.castle.tilePath3,sprites.castle.tilePath9,sprites.castle.tilePath7,sprites.castle.tilePath8,sprites.castle.tilePath6,sprites.castle.tilePath4,sprites.castle.tilePath2,sprites.castle.tilePath5,sprites.castle.tileGrass2,sprites.skillmap.islandTile4,myTiles.tile3], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex`1800100001010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101030303030303030303030101010101010101010101010101030707070303060206030103030303030303030303030303030707070303020602030103080d0d0d0d0d0d0d0d0d0d0d0d0707070303060206030103090e0e0e0e0e0e0e0e0e0e0c030707070303020602030103090e0e0e0e0e0e0e0e0e0e0c030707070303060206030103090e0e0e0e0e0e0e0e0e0e0c030707070303050505030103090e0e0e0e0e0e0e0e0e0e0c030707070303050505030103090a0a0a0a0a0a0a0a0a0a0b0307070703030505050303030403030303030303030303030303030303030404040404040403010101010101010101010101010101030303030303030303010101010101010101010101010101010101010101010101010101010101010101010101010101`, img`
........................
........................
........................
...................22222
22222..............2...2
2...2.22222222222222...2
2...2.2................2
2...2.2............2...2
2...2.2............2...2
2...2.2............2...2
2...2.2............2...2
2...2.2............2...2
2...222.2222222222222222
2.......2...............
222222222...............
........................
`, [myTiles.transparency16,myTiles.tile3,sprites.castle.tileGrass2,sprites.dungeon.floorLight0,sprites.castle.tileGrass1,sprites.castle.tileGrass3,sprites.skillmap.islandTile4,sprites.dungeon.collectibleInsignia,sprites.castle.tilePath1,sprites.castle.tilePath4,sprites.castle.tilePath8,sprites.castle.tilePath9,sprites.castle.tilePath6,sprites.castle.tilePath2,sprites.castle.tilePath5], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level 4":
            case "level6":return tiles.createTilemap(hex`18001000000000000001010101000000000000000000000000000000000000000001020201000000000000000000000000000000000000000001020201000000000000000000000000000000000000000001020201010100000000000000000000000000000000000101060b030401010000000000000000000000000000000101050b0b0b0b040101000000000000000000000001010101050b0b0b0b0b0b04010000000000000000000000010c0c030b0b0b0b0b0b0b0a010000000000000000000000010c0c0b0b0b0b0b0b0b0b0a010000000000000000000000010101060b0b0b0b0b0b0b0a010000000000000000000000000001070b0b0b0b0b0b0b0901000000000000000000000000000101070b0b0b0b0b0901010000000000000000000000000000010107080808090101000000000000000000000000000000000101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
.....2222...............
.....2..2...............
.....2..2...............
.....2..222.............
....22....22............
...22......22...........
2222........2...........
2...........2...........
2...........2...........
222.........2...........
..2.........2...........
..22.......22...........
...22.....22............
....2222222.............
........................
........................
`, [myTiles.transparency16,sprites.dungeon.floorLight0,sprites.castle.tileGrass1,sprites.castle.tilePath2,sprites.castle.tilePath3,sprites.castle.tilePath1,sprites.castle.tilePath4,sprites.castle.tilePath7,sprites.castle.tilePath8,sprites.castle.tilePath9,sprites.castle.tilePath6,sprites.castle.tilePath5,sprites.dungeon.collectibleInsignia], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`18001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008080800000000000000000000000000000000000000000008090808080800000000000000000000000000000000000008070101020800000000000000000000000000000000000008070a0b030800000000000000000000000000000000000008070b0a030800000000000000000000000000000000000008060505040800000000000000000000000000000000000008080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
........................
........................
........................
........................
........................
........222.............
........2.2222..........
........2....2..........
........2....2..........
........2....2..........
........2....2..........
........222222..........
........................
........................
........................
........................
`, [myTiles.transparency16,sprites.castle.tilePath2,sprites.castle.tilePath3,sprites.castle.tilePath6,sprites.castle.tilePath9,sprites.castle.tilePath8,sprites.castle.tilePath7,sprites.castle.tilePath4,sprites.dungeon.floorLight0,sprites.castle.tilePath1,sprites.castle.tileGrass1,sprites.castle.tileGrass2], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile1":return tile1;
            case "tile2":return tile2;
            case "myTile":
            case "tile3":return tile3;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
